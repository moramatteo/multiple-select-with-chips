function create_chips(e,t){for(var l="",s=0;s<t.length;s++)1==t[s].select&&(l+=`<div value="${t[s].value}">\n          <span>${t[s].text}</span>\n          <span class="delete-chip material-icons" value="${t[s].value}" select_name="${e}" onclick="${delete_chip_function}">close</span>\n        </div>`);return l}function create_options(e,t){for(var l="",s=0;s<t.length;s++)1==t[s].select?l+=`<div class="option select" value="${t[s].value}" select_name="${e}" onclick="${delete_chip_function}">`:l+=`<div class="option" value="${t[s].value}" select_name="${e}" onclick="${add_chip_function}">`,l+=`\n          <div class="option-text">${t[s].text}</div>\n          <div class="check-mark">\n            <span class="material-icons-outlined">close</span>\n          </div>\n        </div>`;return l}function select_constructor(e,t,l){l||(l={});try{null==l.placeholder&&(l.placeholder="Cerca"),data_validator(e,t,"constructor");var s=create_chips(e,t),n=`<div class="selected">\n      <div class="chips">\n        ${s}\n      </div>\n      <input type="text" class="text-input add_personal_chip" placeholder="${l.placeholder}"\n      onfocus="show_options_list($(this).attr('select_name'))" select_name="${e}"\n      onkeyup="options_filter(this.value)">\n    </div>\n    <div class="options-list hide">\n      ${create_options(e,t)}\n    </div>`;$(`[select_name=${e}]`).append(n),0==l.add_personal_chip&&$(`[select_name=${e}] .text-input`).removeClass("add_personal_chip"),0==l.autocomplete&&$(`[select_name=${e}] .text-input`).removeAttr("onkeyup"),"number"==typeof l.max_selections&&(select_catalog[e]={max_selections:l.max_selections}),set_input_with()}catch(t){alert(`errore nel selettore chiamato "${e}"\n${t}`),$(`[select_name=${e}]`).append("errore nell'inserimento delle opzioni")}}function show_options_list(e){$(`[select_name=${e}] > .options-list`).removeClass("hide"),select_name=e}function add_chip(e,t,l,s){try{if(s||(s=select_name),check_limit(s),""!=e){var n=t[0].firstChild.nextSibling.innerText;$(e).addClass("select")}else{n=l;data_validator(s,n,"enter")}$(`[select_name=${s}] .chips`).append(`\n    <div value="${l}">\n      <span>${n}</span>\n      <span class="delete-chip material-icons" value="${l}" select_name="${s}" onclick="${delete_chip_function}">close</span>\n    </div>\n  `),$(e).attr("onclick",`${delete_chip_function}`),set_input_with()}catch(e){alert(e)}}function delete_chip(e,t){$(`[select_name=${t}] .chips > div[value="${e}"]`).remove(),$(`[select_name=${t}] .option[value="${e}"]`).removeClass("select").attr("onclick",add_chip_function),set_input_with()}function onKeyPressed(e){var t=e.key;if("Enter"==t&&1==$(`[select_name=${select_name}]  .text-input`).is(":focus")&&1==$(`[select_name=${select_name}]  .text-input`).hasClass("add_personal_chip")){var l=$(`.text-input[select_name=${select_name}]`).val();""!=l&&($(".text-input").val("").blur(),add_chip("","",l),$(`[select_name=${select_name}] .option`).removeClass("hide"),$(`[select_name=${select_name}] .options-list`).addClass("hide"))}}function options_filter(e){if(""==e)$(`[select_name=${select_name}] .option`).removeClass("hide");else for(var t=$(`[select_name=${select_name}] .options-list`).children().length,l=1;l<t+1;l++)-1==$(`[select_name=${select_name}] .option:nth-child(${l}) > .option-text`).html().toLowerCase().indexOf(e.toLowerCase())?$(`[select_name=${select_name}] .option:nth-child(${l})`).addClass("hide"):$(`[select_name=${select_name}] .option:nth-child(${l})`).removeClass("hide");$(`[select_name=${select_name}] .option`).removeClass("top-border bottom-border"),$(`[select_name=${select_name}] .option:not(.hide)`).first().addClass("top-border"),$(`[select_name=${select_name}] .option:not(.hide)`).last().addClass("bottom-border")}function new_datas(e,t,l){l||(l="replace");try{data_validator(e,t,l);var s=create_chips(e,t),n=create_options(e,t);"replace"==l&&($(`[select_name=${e}] .options-list`).replaceWith('<div class="options-list hide">'+n+"</div>"),$(`[select_name=${e}] .chips > div`).remove(),$(`[select_name=${e}] .chips`).append(` ${s} `)),"add"==l&&($(`[select_name=${e}] .options-list`).append(n),$(`[select_name=${e}] .chips`).append(` ${s} `))}catch(t){alert(`errore nel selettore chiamato "${e}"\n${t}`),$(`[select_name=${e}]`).replaceWith("errore nell'inserimento delle opzioni")}}function get_value(e){for(var t={all:check_all_selected(),names:[],values:[],added_values:[]},l=$(`[select_name=${e}] .chips`).children().length,s=1;s<l+1;s++){var n=$(`[select_name=${e}] .chips > div:nth-child(${s})`).attr("value");t.values.push(n);var a=$(`[select_name=${e}] .chips > div:nth-child(${s}) > span:nth-child(2)`).html();t.names.push(a),0==$(`[select_name=${e}] .options-list > div[value=${n}]`).length&&t.added_values.push(n)}return t}function check_all_selected(e){for(var t=!0,l=$(`[select_name=${e}] .options-list`).children().length,s=1;s<l+1;s++){var n=`[select_name=${e}] .options-list > div:nth-child(${s})`;if(0==$(n).hasClass("select")){t=!1;break}}return t}function select_all(e){e||(e=select_name);for(var t=$(`[select_name=${e}] .options-list`).children().length,l=1;l<t+1;l++){var s=`[select_name=${e}] .options-list > div:nth-child(${l})`;1!=$(s).hasClass("select")&&add_chip($(s),$(s).first(),$(s).attr("value"),e)}}function deselect_all(e,t){t||(t=select_name);for(var l=$(`[select_name=${t}] .options-list`).children().length,s=1;s<l+1;s++){var n=`[select_name=${t}] .options-list > div:nth-child(${s})`;0!=$(n).hasClass("select")&&($(n).removeClass("select"),delete_chip($(n).attr("value"),t))}"forced"==e&&$(`[select_name=${t}] .chips > div`).remove()}function data_validator(e,t,l){var s=[];if("enter"==l){for(var n=$(`[select_name=${e}] .chips`).children().length,a=1;a<n+1;a++){var i=`[select_name=${e}] .chips > div:nth-child(${a})`,c=$(i).attr("value");if(s.push(c),s.includes(t))throw"valore già selezionato"}var o=$(`[select_name=${e}] .options-list`).children().length;for(a=1;a<o+1;a++){i=`[select_name=${e}] .options-list > div:nth-child(${a})`,c=$(i).attr("value");if(s.push(c),s.includes(t))throw"c'è già una opzione con questo valore"}}if("constructor"==l||"replace"==l)for(a=0;a<t.length;a++){if(null==t[a].text||""==t[a].text)throw`Non è stato impostato nessun testo per il valore "${t[a].value}"`;if(null==t[a].value||""==t[a].value)throw`Non è stato impostato nessun valore per il testo "${t[a].text}"`;if(s.includes(t[a].value))throw"Ci sono dei valori duplicati";s.push(t[a].value)}if("add"==l){data_validator(e,t,"replace");for(n=$(`[select_name=${e}] .chips`).children().length,a=1;a<n+1;a++){i=`[select_name=${e}] .chips > div:nth-child(${a})`,c=$(i).attr("value");s.push(c)}for(o=$(`[select_name=${e}] .options-list`).children().length,a=1;a<o+1;a++){i=`[select_name=${e}] .options-list > div:nth-child(${a})`,c=$(i).attr("value");s.push(c)}for(a=0;a<t.length;a++)if(s.includes(t[a].value))throw"Ci sono dei valori duplicati"}}function check_limit(e){var t=$(`[select_name=${this.select_name}] .chips`).children().length,l=select_catalog[e].max_selections;if(t==l)throw"Limite di elementi selezionabili raggiunto"}function set_input_with(){for(var e=$("div.multiple-select-chip[select_name]").length,t=0;t<e;t++){var l=$(`div.multiple-select-chip[select_name]:eq(${t}) .chips`).width(),s=$(`div.multiple-select-chip[select_name]:eq(${t}) .selected`).width(),n=s-l;n>100?$(`div.multiple-select-chip[select_name]:eq(${t}) .text-input`).css("width",n):$(`div.multiple-select-chip[select_name]:eq(${t}) .text-input`).css("width","100px")}}var select_name,old_select_name,select_catalog={},delete_chip_function="delete_chip($(this).attr('value'), $(this).attr('select_name'))",add_chip_function="add_chip(this, $(this).first(), $(this).attr('value'))";document.onclick=function(e){var t=!0,l=select_name;old_select_name!=l&&null!=old_select_name&&$(`[select_name="${old_select_name}"] .options-list`).addClass("hide");for(var s=0;s<e.path.length;s++)if(null!=e.path[s].className&&e.path[s].className.includes("multiple-select-chip")){t=!1,old_select_name=l;break}t&&$(`[select_name="${l}"] .options-list`).addClass("hide")},document.addEventListener("keydown",onKeyPressed),$(window).resize(function(){set_input_with()});class select{constructor(e,t,l){this.select_name=e,select_constructor(this.select_name,t,l)}create_chips(e){create_chips(this.select_name,e)}create_options(e){create_options(this.select_name,e)}new_data(e,t){new_datas(this.select_name,e,t)}get_value(){get_value(this.select_name)}check_all_selected(){check_all_selected(this.select_name)}select_all(){select_all(this.select_name)}deselect_all(e){deselect_all(e,this.select_name)}}